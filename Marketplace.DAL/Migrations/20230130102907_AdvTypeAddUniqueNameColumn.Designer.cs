// <auto-generated />
using System;
using MarketplaceDAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketplaceDAL.Migrations
{
    [DbContext(typeof(MarketplaceDbContext))]
    [Migration("20230130102907_AdvTypeAddUniqueNameColumn")]
    partial class AdvTypeAddUniqueNameColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdvTypeAdvertisement", b =>
                {
                    b.Property<int>("AdvTypesId")
                        .HasColumnType("int");

                    b.Property<int>("AdvertisementsId")
                        .HasColumnType("int");

                    b.HasKey("AdvTypesId", "AdvertisementsId");

                    b.HasIndex("AdvertisementsId");

                    b.ToTable("AdvTypeAdvertisement");

                    b.HasData(
                        new
                        {
                            AdvTypesId = 1,
                            AdvertisementsId = 1
                        },
                        new
                        {
                            AdvTypesId = 3,
                            AdvertisementsId = 1
                        },
                        new
                        {
                            AdvTypesId = 4,
                            AdvertisementsId = 1
                        },
                        new
                        {
                            AdvTypesId = 5,
                            AdvertisementsId = 1
                        },
                        new
                        {
                            AdvTypesId = 2,
                            AdvertisementsId = 2
                        },
                        new
                        {
                            AdvTypesId = 1,
                            AdvertisementsId = 2
                        },
                        new
                        {
                            AdvTypesId = 4,
                            AdvertisementsId = 3
                        });
                });

            modelBuilder.Entity("MarketplaceDAL.Models.AdvType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AdvTypeName")
                        .IsUnique();

                    b.ToTable("AdvTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvTypeName = "advtype1"
                        },
                        new
                        {
                            Id = 2,
                            AdvTypeName = "advtype2"
                        },
                        new
                        {
                            Id = 3,
                            AdvTypeName = "advtype3"
                        },
                        new
                        {
                            Id = 4,
                            AdvTypeName = "advtype4"
                        },
                        new
                        {
                            Id = 5,
                            AdvTypeName = "advtype5"
                        });
                });

            modelBuilder.Entity("MarketplaceDAL.Models.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int?>("YearOfManufacture")
                        .HasColumnType("int");

                    b.Property<bool>("isPurchased")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Advertisements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvName = "Test1",
                            Description = "desc1",
                            IsActive = true,
                            Price = 1123.23m,
                            SellerId = 1,
                            YearOfManufacture = 2000,
                            isPurchased = false
                        },
                        new
                        {
                            Id = 2,
                            AdvName = "Test2",
                            Description = "desc2",
                            IsActive = false,
                            Price = 11423.23m,
                            SellerId = 2,
                            YearOfManufacture = 1900,
                            isPurchased = true
                        },
                        new
                        {
                            Id = 3,
                            AdvName = "Test3",
                            Description = "desc3",
                            IsActive = true,
                            Price = 63123.23m,
                            SellerId = 3,
                            YearOfManufacture = 70650,
                            isPurchased = false
                        });
                });

            modelBuilder.Entity("MarketplaceDAL.Models.PurchasedAdvertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchasedByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId")
                        .IsUnique();

                    b.HasIndex("PurchasedByUserId");

                    b.ToTable("PurchasedAdvertisements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvertisementId = 1,
                            PurchaseDate = new DateTime(2023, 1, 30, 12, 29, 7, 683, DateTimeKind.Local).AddTicks(4941),
                            PurchasedByUserId = 2
                        },
                        new
                        {
                            Id = 2,
                            AdvertisementId = 2,
                            PurchaseDate = new DateTime(2023, 1, 30, 12, 29, 7, 683, DateTimeKind.Local).AddTicks(4947),
                            PurchasedByUserId = 3
                        },
                        new
                        {
                            Id = 3,
                            AdvertisementId = 3,
                            PurchaseDate = new DateTime(2023, 1, 30, 12, 29, 7, 683, DateTimeKind.Local).AddTicks(4948),
                            PurchasedByUserId = 1
                        });
                });

            modelBuilder.Entity("MarketplaceDAL.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "city1",
                            CreatedDate = new DateTime(2023, 1, 30, 12, 29, 7, 683, DateTimeKind.Local).AddTicks(4313),
                            DeliveryAdress = "dadres1",
                            Email = "email1@gmail.com",
                            FirstName = "fname1",
                            LastName = "lname1",
                            PhoneNumber = 232423423,
                            UserName = "username1"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "city2",
                            CreatedDate = new DateTime(2023, 1, 30, 12, 29, 7, 683, DateTimeKind.Local).AddTicks(4359),
                            DeliveryAdress = "dadres2",
                            Email = "email2@gmail.com",
                            FirstName = "fname2",
                            LastName = "lname2",
                            PhoneNumber = 232423423,
                            UserName = "username2"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "city1",
                            CreatedDate = new DateTime(2023, 1, 30, 12, 29, 7, 683, DateTimeKind.Local).AddTicks(4362),
                            DeliveryAdress = "dadres1",
                            Email = "email3@gmail.com",
                            FirstName = "fname3",
                            LastName = "lname3",
                            PhoneNumber = 332423423,
                            UserName = "username3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AdvTypeAdvertisement", b =>
                {
                    b.HasOne("MarketplaceDAL.Models.AdvType", null)
                        .WithMany()
                        .HasForeignKey("AdvTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceDAL.Models.Advertisement", null)
                        .WithMany()
                        .HasForeignKey("AdvertisementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarketplaceDAL.Models.Advertisement", b =>
                {
                    b.HasOne("MarketplaceDAL.Models.UserInfo", "Seller")
                        .WithMany("Advertisements")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MarketplaceDAL.Models.PurchasedAdvertisement", b =>
                {
                    b.HasOne("MarketplaceDAL.Models.Advertisement", "Advertisement")
                        .WithOne("PurchasedAdvertisement")
                        .HasForeignKey("MarketplaceDAL.Models.PurchasedAdvertisement", "AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceDAL.Models.UserInfo", "PurchasedByUser")
                        .WithMany("PurchasedAdvertisements")
                        .HasForeignKey("PurchasedByUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("PurchasedByUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarketplaceDAL.Models.Advertisement", b =>
                {
                    b.Navigation("PurchasedAdvertisement")
                        .IsRequired();
                });

            modelBuilder.Entity("MarketplaceDAL.Models.UserInfo", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("PurchasedAdvertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
